```{r}

```

---
title: "Assignment3_ds"
format: html
editor: visual
bibliography: my_bib.bib
---

## **Assignment 3 -** **Pendling**

```{r}
#| label: setup 
#| echo: false
#| output: false
#| message: false
library(tidyverse)
library(tidyselect)
library(lubridate)
library(PxWebApiData)
library(flextable)
library(readr)
library(dplyr)
```

### Importere data

Dataene er hente fra SSB sin statistikktabell 03321, «*Sysselsatte (15-74 år), etter arbeidssteds- og bostedskommune. Pendlingsstrømmer. 4. kvartal (K) 2000 - 2022*» **()**.
Dataene fra SSB har vi hente direkte inn i R via pakken `PxWebApiData`, som gir oss tilgang til SSB via en api:

```{r}
# Henter data for arbeidstakere som jobber på Haugalandet med bostedskommune fordelt over hele landet
pend_00_22_ssb_arbHland <- ApiData(
  "https://data.ssb.no/api/v0/no/table/03321/", 
  returnMetaFrames = TRUE
)
```

```{r}
# Henter data for arbeidstakere som bor på Haugalandet og jobber i kommuner over hele landet
pend_00_22_ssb_boHland <- ApiData(
  "https://data.ssb.no/api/v0/no/table/03321/", 
  returnMetaFrames = TRUE
)
```

Videre har vi hentet arbeidstakere som bor på Haugalandet, jobber i kommuner over hele landet for perioden 2000-2022.
Vi har benytt funksjonen `PxWebApiData::ApiData12()` med ulike argumenter.
Det samme gjorde vi for antall arbeidstakere som jobber på Haugalandet med bosteds-kommune fordelt over hele landet

```{r}
#| cache: true
# Definer kommunenumrene for Haugalandet
kommuner_på_Haugalandet <- c("1106", "1135", "1145", "1146", "1149", "1154", "1159", "1160", "4611", "4612", "1211", "1216")

# Lager en vektor med årene fra 2000 til 2022
år <- as.character(2000:2022)

# Angir tabellnummeret 
tabellnummer <- "03321"

# Henter data for arbeidstakere som jobber på Haugalandet med bostedskommune fordelt over hele landet
pend_00_22_ssb_arbHland <- PxWebApiData::ApiData12(
  urlToData = tabellnummer,
  ArbstedKomm = kommuner_på_Haugalandet,
  Bokommuen = list('*'),
  Tid = år
)

# Henter data for arbeidstakere som bor på Haugalandet og jobber i kommuner over hele landet
pend_00_22_ssb_boHland <- PxWebApiData::ApiData12(
  urlToData = tabellnummer,
  ArbstedKomm = list('*'),
  Bokommuen = kommuner_på_Haugalandet,
  Tid = år
)


# Skriv ut rådataene for begge tilfellene
print(pend_00_22_ssb_boHland)
print(pend_00_22_ssb_arbHland)
```

Derretter lager vi vår egen reduserte versjon av datasettene hvor vi kunn ønsker å ta med: år, arbeidsstedskommune, bokommune og antall pendlere.
Dette gjelder for begge datasettene.

**\--\> "*Vi bryr oss altså ikke om kommunenummer i det videre arbeidet og jobber bare med kommunenavn som kategorivariabler*"??**?

```{r}
Arbeid <- pend_00_22_ssb_arbHland |> 
  select(aar = år, arb_kom = arbeidsstedskommune, bo_kom = bostedskommune, pendlere = value) |> 
  as_tibble()
```

```{r}
Bosted <- pend_00_22_ssb_boHland |> 
  select(aar = år, bo_kom = bostedskommune, arb_kom = arbeidsstedskommune, pendlere = value) |> 
  as_tibble()
```

\--\> "***Vi må så konvertere `arb_kom` og `bo_kom` til kategorivariabler vha. `fct()` funksjonen. Hver av disse variablene skal så kollapses til kategoriene `Haugesund`, `Sauda`, `Bokn`, `Tysvær`, `Karmøy`, `Vindafjord` og `Ølen`. Vi gjør dette ved å bruke `fct_collapse()` funksjonen. Vi må også sørge for at hhv. `Ølen` og `Vindafjord` blir slått sammen til en kategori fra sine «gamle» versjoner. Vi samler kommunene utenfor Haugalandet i kategorien «Andre» vha. argumentet `other_level = "Andre"`. Overskriv `arb_kom` og `bo_kom` med sine kollapsede versjoner." ???***

```{r}
Arbeid <- Arbeid |> 
  mutate(
    arb_kom = fct(arb_kom),
    arb_kom = fct_collapse(
      .f = arb_kom,
      "Haugesund" = "Haugesund",
      "Sveio" = c("Sveio", "Sveio (-2019)"),
      "Karmøy" = "Karmøy",
      "Bokn" = "Bokn",
      "Tysvær" = "Tysvær",
      "Sauda" = "Sauda",
      "Vindafjord" = c("Vindafjord", "Vindafjord (1965-2005)", "Ølen (2002-2005)"),
      "Etne" = c("Etne (-2019)", "Etne"),
      other_level = "Andre"
    ), 
    bo_kom = fct(bo_kom),
    bo_kom = fct_collapse(
      .f = bo_kom,
      "Haugesund" = "Haugesund",
      "Sveio" = c("Sveio", "Sveio (-2019)"),
      "Karmøy" = "Karmøy",
      "Bokn" = "Bokn",
      "Tysvær" = "Tysvær",
      "Sauda" = "Sauda",
      "Vindafjord" = c("Vindafjord", "Vindafjord (1965-2005)", "Ølen (2002-2005)"),
      "Etne" = c("Etne (-2019)", "Etne"),
      other_level = "Andre"
    )
  ) |> 
  arrange(aar,arb_kom, bo_kom)
```

```{r}
<<<<<<< HEAD
#plukke ut ett element
x[[14]]
=======
Bosted <- Bosted |> 
  mutate(
    bo_kom = fct(bo_kom),
    bo_kom = fct_collapse(
      .f = bo_kom,
      "Haugesund" = "Haugesund",
      "Sveio" = c("Sveio", "Sveio (-2019)"),
      "Karmøy" = "Karmøy",
      "Bokn" = "Bokn",
      "Tysvær" = "Tysvær",
      "Sauda" = "Sauda",
      "Vindafjord" = c("Vindafjord", "Vindafjord (1965-2005)", "Ølen (2002-2005)"),
      "Etne" = c("Etne (-2019)", "Etne"),
      other_level = "Andre"
    ),
    arb_kom = fct(arb_kom),
    arb_kom = fct_collapse(
      .f = arb_kom,
      "Haugesund" = "Haugesund",
      "Sveio" = c("Sveio", "Sveio (-2019)"),
      "Karmøy" = "Karmøy",
      "Bokn" = "Bokn",
      "Tysvær" = "Tysvær",
      "Sauda" = "Sauda",
      "Vindafjord" = c("Vindafjord", "Vindafjord (1965-2005)", "Ølen (2002-2005)"),
      "Etne" = c("Etne (-2019)", "Etne"),
      other_level = "Andre"
    )
  ) |> 
  arrange(aar,arb_kom, bo_kom)
```

```{r}
# For Arbeid
Arbeid <- Arbeid %>%
  filter(arb_kom %in% c("Haugesund", "Sveio", "Karmøy", "Bokn", "Tysvær", "Sauda", "Vindafjord", "Etne", "Andre")) %>%
  group_by(aar, bo_kom, arb_kom) %>%
  summarize(pendlere = sum(pendlere))
```

```{r}
# For Bosted
Bosted <- Bosted %>%
  filter(bo_kom %in% c("Haugesund", "Sveio", "Karmøy", "Bokn", "Tysvær", "Sauda", "Vindafjord", "Etne", "Andre")) %>%
  group_by(aar, bo_kom, arb_kom) %>%
  summarize(pendlere = sum(pendlere))
```

```{r}
# Slå sammen datasettene med full_join
pmat_long <- full_join(Bosted, Arbeid, by = c("aar", "bo_kom", "arb_kom"))
```

```{r}
pmat_long <- full_join(Bosted, Arbeid, by = c("aar", "bo_kom", "arb_kom")) %>%
  ungroup() %>%
  mutate(across(c("arb_kom", "bo_kom"), as.character))

```

```{r}
pmat_long <- pmat_long %>%
  mutate(pendlere = coalesce(pendlere.x, pendlere.y)) %>%
  filter(!is.na(pendlere) & pendlere != 0) %>%
  select(-pendlere.x, -pendlere.y)
```

```{r}
pmat_long <- pmat_long %>%
  group_by(aar, bo_kom) %>%
  mutate(bo_percent = (pendlere / sum(pendlere)) * 100) %>%
  ungroup() %>%
  group_by(aar, arb_kom) %>%
  mutate(arb_percent = (pendlere / sum(pendlere)) * 100) %>%
  ungroup() %>%
  arrange(aar, arb_kom, bo_kom)
```

```{r}
<<<<<<< HEAD
print(pmat_long)
=======
print(pmat_long_temp)
>>>>>>> a06fcd10db41a21857d2028fe2a49d5d171bcc7b
>>>>>>> c4b6fc2a3cb1daa047da3d6946cd442fa267bc27
```

Rekkefølge kommune

```{r}
ordKom <- c("bo_kom" , "Haugesund", "Karmøy", "Tysvær", 
            "Sveio", "Bokn", "Vindafjord", "Sauda", 
            "Etne", "Andre")
```

```{r}
# Pendlermatrise for Haugalandet år 2000
H2000 <- pmat_long |> 
  filter(aar == 2000) |> 
  select(bo_kom, arb_kom, pendlere) |> 
  pivot_wider(
    names_from = arb_kom,
    values_from = pendlere
  ) |> 
  arrange(fct(bo_kom, levels = ordKom[-1])) |> 
  select(all_of(ordKom)) |> 
  rename(`Bo kom - Arb kom` = bo_kom)

```

```{r}
# Gjøre pendlermatrisen litt finere
```

```{r}
#| label: tbl-H2000
#| tbl-cap: "Pendlematrise for Haugalandet år 2000."
H2000 |> 
  flextable() |> 
  fit_to_width(max_width = 6.268, inc = 1L, max_iter = 20, unit = "in") |> 
  line_spacing(space = 0,
              part = "body"
              ) %>% 
  hrule(rule = "exact")  %>% 
  height_all(height = 5, part = "all", unit = "mm") |> 
  padding(padding.top = 1, padding.bottom = 2, part = "all") %>% 
  theme_booktabs()
```

## Spørsmål 

### Spørsmål vedrørende pendle/andels-matrisene for 2000 

1.  121 stk.
2.  Ingen observersjon = 0 stk.
3.  
